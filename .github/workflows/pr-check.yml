name: PR Check
run-name: ${{ github.event.number }} ðŸš€ ${{ github.event.pull_request.title }} ðŸš€ ${{ github.event.head_commit.message }}
on:
  pull_request:
    branches:
      - main

jobs:
  npm-update:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event.number }}-npm-update
      cancel-in-progress: true
    outputs:
      status: ${{ steps.package-lock-check.outputs.status }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.pat_github}}
      - name: Node Version
        run: node -v
      - name: NPM Install
        run: npm ci
      - name: package-lock.json check
        id: package-lock-check
        run: |
          md5sum package-lock.json > package-lock.md5
          npm i
          # Verify MD5 checksum
          if md5sum --check "package-lock.md5"; then
            rm package-lock.md5;
            echo "MD5 checksum verified successfully."
            echo "status=success" >> $GITHUB_OUTPUT;
          else
            echo "MD5 checksum verification failed."
            echo "Branch Name: $GITHUB_HEAD_REF"
            git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
            git fetch origin "+refs/heads/$GITHUB_HEAD_REF"
            git checkout -b "$GITHUB_HEAD_REF" "origin/$GITHUB_HEAD_REF"
            git config --global user.email "faceapps@heallo.ai"
            git config --global user.name "faceapps"
            git add "package-lock.json"
            git commit -m "package-lock.json update"
            git push origin "$GITHUB_HEAD_REF"
            echo "status=failure" >> $GITHUB_OUTPUT;
          fi

  code-formatting:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event.number }}-code-formatting
      cancel-in-progress: true
    if: ${{ needs.npm-update.outputs.status == 'success' }}
    needs: [npm-update]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.pat_github}}
      - name: NPM Install
        run: npm ci
      - run: npm run lint
      - run: node_modules/typescript/bin/tsc -p ./
      - run: rm -r dist
      - name: Generate Coverage Report
        run: npm run jest:coverage
